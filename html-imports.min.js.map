{"version":3,"sources":["src/html-imports.js"],"names":["scope","newCustomEvent","type","params","window","CustomEvent","event","document","createEvent","initCustomEvent","bubbles","cancelable","detail","importForElement","element","owner","parentNode","host","isImportLink","whenImportsReady","callback","imports","querySelectorAll","rootImportSelector","pending","length","i","l","imp","whenElementLoaded","whenDocumentReady","readyState","stateChanged","removeEventListener","addEventListener","whenReady","localName","src","onLoadingDone","isIE","node","nodeType","Node","ELEMENT_NODE","rel","constructor","Importer","documents","inflight","dynamicImportsMO","MutationObserver","m","handleMutations","observe","head","childList","subtree","loadImports","currentScript","Object","defineProperty","get","scripts","configurable","ABS_URL_TEST","CSS_URL_REGEXP","CSS_IMPORT_REGEXP","STYLESHEET_REGEXP","Path","fixUrls","base","href","setAttribute","replaceAttrUrl","getAttribute","resolveUrlsInStyle","fixUrlAttributes","attrs","a","at","attributes","v","value","search","resolveUrlsInCssText","fixUrlsInTemplates","t$","fixUrlsInTemplate","template","content","n$","n","style","linkUrl","textContent","cssText","r","replaceUrls","text","regexp","replace","pre","url","post","urlPath","resolveUrl","test","undefined","__workingURL","u","URL","pathname","e","doc","__tempDoc","implementation","createHTMLDocument","__base","createElement","appendChild","__anchor","Xhr","async","load","success","fail","match","pieces","split","resource","header","indexOf","atob","decodeURIComponent","request","XMLHttpRequest","open","onload","request.onload","redirectedUrl","getResponseHeader","location","origin","protocol","response","responseText","status","send","navigator","userAgent","links","importSelector","loadImport","processImportsIfLoadingDone","link","import","fireEventIfNeeded","makeDocument","createDocumentFragment","p1","p2","innerHTML","firstChild","baseEl","querySelector","removeAttribute","importDependenciesSelector","inlineScriptIndex","importDependencyAttr","encodeURIComponent","num","disconnect","flatten","scriptsOk","stylesOk","fireEvents","waitForStyles","runScripts","DOCUMENT_FRAGMENT_NODE","cloneScript","s","s$","clone","j","ll","name","replaceChild","pendingScriptsSelector","pendingStylesSelector","needsMove","disabledLinkSelector","rootImport","parent","next","nextSibling","placeholder","insertBefore","dispatchEvent","eventType","mutations","addedNodes","ii","useNative","HTMLImports"],"mappings":"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","file":"html-imports.min.js","sourcesContent":["/**\r\n * @license\r\n * Copyright (c) 2016 The Polymer Project Authors. All rights reserved.\r\n * This code may only be used under the BSD style license found at http://polymer.github.io/LICENSE.txt\r\n * The complete set of authors may be found at http://polymer.github.io/AUTHORS.txt\r\n * The complete set of contributors may be found at http://polymer.github.io/CONTRIBUTORS.txt\r\n * Code distributed by Google as part of the polymer project is also\r\n * subject to an additional IP rights grant found at http://polymer.github.io/PATENTS.txt\r\n */\r\n(scope => {\r\n  'use strict';\r\n\r\n  /********************* base setup *********************/\r\n\r\n  // Polyfill `currentScript` for browsers without it.\r\n  let currentScript = null;\r\n  if ('currentScript' in document === false) {\r\n    Object.defineProperty(document, 'currentScript', {\r\n      get() {\r\n        return currentScript ||\r\n          // NOTE: only works when called in synchronously executing code.\r\n          // readyState should check if `loading` but IE10 is\r\n          // interactive when scripts run so we cheat. This is not needed by\r\n          // html-imports polyfill but helps generally polyfill `currentScript`.\r\n          (document.readyState !== 'complete' ?\r\n            document.scripts[document.scripts.length - 1] : null);\r\n      },\r\n      configurable: true\r\n    });\r\n  }\r\n\r\n  /********************* path fixup *********************/\r\n  const ABS_URL_TEST = /(^\\/)|(^#)|(^[\\w-\\d]*:)/;\r\n  const CSS_URL_REGEXP = /(url\\()([^)]*)(\\))/g;\r\n  const CSS_IMPORT_REGEXP = /(@import[\\s]+(?!url\\())([^;]*)(;)/g;\r\n  const STYLESHEET_REGEXP = /(<link[^>]*)(rel=['|\"]?stylesheet['|\"]?[^>]*>)/g;\r\n\r\n  // path fixup: style elements in imports must be made relative to the main\r\n  // document. We fixup url's in url() and @import.\r\n  const Path = {\r\n\r\n    fixUrls(element, base) {\r\n      if (element.href) {\r\n        element.setAttribute('href',\r\n          Path.replaceAttrUrl(element.getAttribute('href'), base));\r\n      }\r\n      if (element.src) {\r\n        element.setAttribute('src',\r\n          Path.replaceAttrUrl(element.getAttribute('src'), base));\r\n      }\r\n      if (element.localName === 'style') {\r\n        Path.resolveUrlsInStyle(element, base);\r\n      }\r\n    },\r\n\r\n    fixUrlAttributes(element, base) {\r\n      const attrs = ['action', 'src', 'href', 'url', 'style'];\r\n      for (let i = 0, a; i < attrs.length && (a = attrs[i]); i++) {\r\n        const at = element.attributes[a];\r\n        const v = at && at.value;\r\n        // Skip bound attribute values (assume binding is done via {} and []).\r\n        // TODO(valdrin) consider exposing a library-implementable hook.\r\n        if (v && (v.search(/({{|\\[\\[)/) < 0)) {\r\n          at.value = (a === 'style') ?\r\n            Path.resolveUrlsInCssText(v, base) :\r\n            Path.replaceAttrUrl(v, base);\r\n        }\r\n      }\r\n    },\r\n\r\n    fixUrlsInTemplates(element, base) {\r\n      const t$ = element.querySelectorAll('template');\r\n      for (let i = 0; i < t$.length; i++) {\r\n        Path.fixUrlsInTemplate(t$[i], base);\r\n      }\r\n    },\r\n\r\n    fixUrlsInTemplate(template, base) {\r\n      // If template is not supported, still resolve urls within it.\r\n      const content = template.content || template;\r\n      const n$ = content.querySelectorAll(\r\n        'style, form[action], [src], [href], [url], [style]');\r\n      for (let i = 0; i < n$.length; i++) {\r\n        const n = n$[i];\r\n        if (n.localName == 'style') {\r\n          Path.resolveUrlsInStyle(n, base);\r\n        } else {\r\n          Path.fixUrlAttributes(n, base);\r\n        }\r\n      }\r\n      Path.fixUrlsInTemplates(content, base);\r\n    },\r\n\r\n    resolveUrlsInStyle(style, linkUrl) {\r\n      style.textContent = Path.resolveUrlsInCssText(style.textContent, linkUrl);\r\n    },\r\n\r\n    resolveUrlsInCssText(cssText, linkUrl) {\r\n      let r = Path.replaceUrls(cssText, linkUrl, CSS_URL_REGEXP);\r\n      r = Path.replaceUrls(r, linkUrl, CSS_IMPORT_REGEXP);\r\n      return r;\r\n    },\r\n\r\n    replaceUrls(text, linkUrl, regexp) {\r\n      return text.replace(regexp, (m, pre, url, post) => {\r\n        let urlPath = url.replace(/[\"']/g, '');\r\n        if (linkUrl) {\r\n          urlPath = Path.resolveUrl(urlPath, linkUrl);\r\n        }\r\n        return pre + '\\'' + urlPath + '\\'' + post;\r\n      });\r\n    },\r\n\r\n    replaceAttrUrl(text, linkUrl) {\r\n      if (text && ABS_URL_TEST.test(text)) {\r\n        return text;\r\n      } else {\r\n        return Path.resolveUrl(text, linkUrl);\r\n      }\r\n    },\r\n\r\n    resolveUrl(url, base) {\r\n      // Lazy feature detection.\r\n      if (Path.__workingURL === undefined) {\r\n        Path.__workingURL = false;\r\n        try {\r\n          const u = new URL('b', 'http://a');\r\n          u.pathname = 'c%20d';\r\n          Path.__workingURL = (u.href === 'http://a/c%20d');\r\n        } catch (e) {}\r\n      }\r\n\r\n      if (Path.__workingURL) {\r\n        return (new URL(url, base)).href;\r\n      }\r\n\r\n      // Fallback to creating an anchor into a disconnected document.\r\n      let doc = Path.__tempDoc;\r\n      if (!doc) {\r\n        doc = document.implementation.createHTMLDocument('temp');\r\n        Path.__tempDoc = doc;\r\n        doc.__base = doc.createElement('base');\r\n        doc.head.appendChild(doc.__base);\r\n        doc.__anchor = doc.createElement('a');\r\n      }\r\n      doc.__base.href = base;\r\n      doc.__anchor.href = url;\r\n      return doc.__anchor.href || url;\r\n    }\r\n  };\r\n\r\n  /********************* Xhr processor *********************/\r\n  const Xhr = {\r\n\r\n    async: true,\r\n\r\n    /**\r\n     * @param {!string} url\r\n     * @param {!function(!string, string=)} success\r\n     * @param {!function(!string)} fail\r\n     */\r\n    load(url, success, fail) {\r\n      if (!url) {\r\n        fail('error: href must be specified');\r\n      } else if (url.match(/^data:/)) {\r\n        // Handle Data URI Scheme\r\n        const pieces = url.split(',');\r\n        const header = pieces[0];\r\n        let resource = pieces[1];\r\n        if (header.indexOf(';base64') > -1) {\r\n          resource = atob(resource);\r\n        } else {\r\n          resource = decodeURIComponent(resource);\r\n        }\r\n        success(resource);\r\n      } else {\r\n        const request = new XMLHttpRequest();\r\n        request.open('GET', url, Xhr.async);\r\n        request.onload = () => {\r\n          // Servers redirecting an import can add a Location header to help us\r\n          // polyfill correctly. Handle relative and full paths.\r\n          let redirectedUrl = request.getResponseHeader('Location');\r\n          if (redirectedUrl && redirectedUrl.indexOf('/') === 0) {\r\n            // In IE location.origin might not work\r\n            // https://connect.microsoft.com/IE/feedback/details/1763802/location-origin-is-undefined-in-ie-11-on-windows-10-but-works-on-windows-7\r\n            const origin = (location.origin || location.protocol + '//' + location.host);\r\n            redirectedUrl = origin + redirectedUrl;\r\n          }\r\n          const resource = /** @type {string} */ (request.response || request.responseText);\r\n          if (request.status === 304 || request.status === 0 ||\r\n            request.status >= 200 && request.status < 300) {\r\n            success(resource, redirectedUrl);\r\n          } else {\r\n            fail(resource);\r\n          }\r\n        };\r\n        request.send();\r\n      }\r\n    }\r\n  };\r\n\r\n  /********************* importer *********************/\r\n\r\n  const isIE = /Trident/.test(navigator.userAgent) ||\r\n    /Edge\\/\\d./i.test(navigator.userAgent);\r\n\r\n  const importSelector = 'link[rel=import]';\r\n\r\n  // Used to disable loading of resources.\r\n  const importDisableType = 'import-disable';\r\n\r\n  const disabledLinkSelector = `link[rel=stylesheet][href][type=${importDisableType}]`;\r\n\r\n  const importDependenciesSelector = `${importSelector}, ${disabledLinkSelector},\r\n    style:not([type]), link[rel=stylesheet][href]:not([type]),\r\n    script:not([type]), script[type=\"application/javascript\"],\r\n    script[type=\"text/javascript\"]`;\r\n\r\n  const importDependencyAttr = 'import-dependency';\r\n\r\n  const rootImportSelector = `${importSelector}:not(${importDependencyAttr})`;\r\n\r\n  const pendingScriptsSelector = `script[${importDependencyAttr}]`;\r\n\r\n  const pendingStylesSelector = `style[${importDependencyAttr}],\r\n    link[rel=stylesheet][${importDependencyAttr}]`;\r\n\r\n  /**\r\n   * Importer will:\r\n   * - load any linked import documents (with deduping)\r\n   * - whenever an import is loaded, prompt the parser to try to parse\r\n   * - observe imported documents for new elements (these are handled via the\r\n   *   dynamic importer)\r\n   */\r\n  class Importer {\r\n    constructor() {\r\n      this.documents = {};\r\n      // Used to keep track of pending loads, so that flattening and firing of\r\n      // events can be done when all resources are ready.\r\n      this.inflight = 0;\r\n      // Used to observe changes on <head>, keep track so we can stop observer\r\n      // while flattening.\r\n      this.dynamicImportsMO = new MutationObserver(m => this.handleMutations(m));\r\n      this.dynamicImportsMO.observe(document.head, {\r\n        childList: true,\r\n        subtree: true\r\n      });\r\n      // 1. Load imports contents\r\n      // 2. Assign them to first import links on the document\r\n      // 3. Wait for import styles & scripts to be done loading/running\r\n      // 4. Fire load/error events\r\n      this.loadImports(document);\r\n    }\r\n\r\n    /**\r\n     * @param {!(HTMLDocument|DocumentFragment|Element)} doc\r\n     */\r\n    loadImports(doc) {\r\n      const links = /** @type {!NodeList<!HTMLLinkElement>} */\r\n        (doc.querySelectorAll(importSelector));\r\n      for (let i = 0, l = links.length; i < l; i++) {\r\n        this.loadImport(links[i]);\r\n      }\r\n      this.processImportsIfLoadingDone();\r\n    }\r\n\r\n    /**\r\n     * @param {!HTMLLinkElement} link\r\n     */\r\n    loadImport(link) {\r\n      const url = link.href;\r\n      // This resource is already being handled by another import.\r\n      if (this.documents[url] !== undefined) {\r\n        // If import is already loaded, we can safely associate it to the link\r\n        // and fire the load/error event.\r\n        const imp = this.documents[url];\r\n        if (imp && imp['__loaded']) {\r\n          link.import = imp;\r\n          this.fireEventIfNeeded(link);\r\n        }\r\n        return;\r\n      }\r\n      this.inflight++;\r\n      // Mark it as pending to notify others this url is being loaded.\r\n      this.documents[url] = 'pending';\r\n      Xhr.load(url, (resource, redirectedUrl) => {\r\n        const doc = this.makeDocument(resource, redirectedUrl || url);\r\n        this.documents[url] = doc;\r\n        this.inflight--;\r\n        // Load subtree.\r\n        this.loadImports(doc);\r\n      }, () => {\r\n        // If load fails, handle error.\r\n        this.documents[url] = null;\r\n        this.inflight--;\r\n        this.processImportsIfLoadingDone();\r\n      });\r\n    }\r\n\r\n    /**\r\n     * Creates a new document containing resource and normalizes urls accordingly.\r\n     * @param {string=} resource\r\n     * @param {string=} url\r\n     * @return {!DocumentFragment}\r\n     */\r\n    makeDocument(resource, url) {\r\n      if (!resource) {\r\n        return document.createDocumentFragment();\r\n      }\r\n\r\n      if (isIE) {\r\n        // <link rel=stylesheet> should be appended to <head>. Not doing so\r\n        // in IE/Edge breaks the cascading order. We disable the loading by\r\n        // setting the type before setting innerHTML to avoid loading\r\n        // resources twice.\r\n        resource = resource.replace(STYLESHEET_REGEXP, (match, p1, p2) => {\r\n          if (match.indexOf('type=') === -1) {\r\n            return `${p1} type=${importDisableType} ${p2}`;\r\n          }\r\n          return match;\r\n        });\r\n      }\r\n\r\n      let content;\r\n      const template = /** @type {!HTMLTemplateElement} */\r\n        (document.createElement('template'));\r\n      template.innerHTML = resource;\r\n      if (template.content) {\r\n        // This creates issues in Safari10 when used with shadydom (see #12).\r\n        content = template.content;\r\n      } else {\r\n        // <template> not supported, create fragment and move content into it.\r\n        content = document.createDocumentFragment();\r\n        while (template.firstChild) {\r\n          content.appendChild(template.firstChild);\r\n        }\r\n      }\r\n\r\n      // Support <base> in imported docs. Resolve url and remove its href.\r\n      const baseEl = content.querySelector('base');\r\n      if (baseEl) {\r\n        url = Path.replaceAttrUrl(baseEl.getAttribute('href'), url);\r\n        baseEl.removeAttribute('href');\r\n      }\r\n\r\n      const n$ = /** @type {!NodeList<!(HTMLLinkElement|HTMLScriptElement|HTMLStyleElement)>} */\r\n        (content.querySelectorAll(importDependenciesSelector));\r\n      // For source map hints.\r\n      let inlineScriptIndex = 0;\r\n      for (let i = 0, l = n$.length, n; i < l && (n = n$[i]); i++) {\r\n        // Listen for load/error events, then fix urls.\r\n        whenElementLoaded(n);\r\n        Path.fixUrls(n, url);\r\n        // Mark for easier selectors.\r\n        n.setAttribute(importDependencyAttr, '');\r\n        // Generate source map hints for inline scripts.\r\n        if (n.localName === 'script' && !n.src && n.textContent) {\r\n          const num = inlineScriptIndex ? `-${inlineScriptIndex}` : '';\r\n          const content = n.textContent + `\\n//# sourceURL=${url}${num}.js\\n`;\r\n          // We use the src attribute so it triggers load/error events, and it's\r\n          // easier to capture errors (e.g. parsing) like this.\r\n          n.setAttribute('src', 'data:text/javascript;charset=utf-8,' + encodeURIComponent(content));\r\n          n.textContent = '';\r\n          inlineScriptIndex++;\r\n        }\r\n      }\r\n      Path.fixUrlsInTemplates(content, url);\r\n      return content;\r\n    }\r\n\r\n    /**\r\n     * Waits for loaded imports to finish loading scripts and styles, then fires\r\n     * the load/error events.\r\n     */\r\n    processImportsIfLoadingDone() {\r\n      // Wait until all resources are ready, then load import resources.\r\n      if (this.inflight) {\r\n        return;\r\n      }\r\n\r\n      // Stop observing, flatten & load resource, then restart observing <head>.\r\n      this.dynamicImportsMO.disconnect();\r\n      this.flatten(document);\r\n      // We wait for styles to load, and at the same time we execute the scripts,\r\n      // then fire the load/error events for imports to have faster whenReady\r\n      // callback execution.\r\n      // NOTE: This is different for native behavior where scripts would be\r\n      // executed after the styles before them are loaded.\r\n      // To achieve that, we could select pending styles and scripts in the\r\n      // document and execute them sequentially in their dom order.\r\n      let scriptsOk = false,\r\n        stylesOk = false;\r\n      const onLoadingDone = () => {\r\n        if (stylesOk && scriptsOk) {\r\n          // Restart observing.\r\n          this.dynamicImportsMO.observe(document.head, {\r\n            childList: true,\r\n            subtree: true\r\n          });\r\n          this.fireEvents();\r\n        }\r\n      }\r\n      this.waitForStyles(() => {\r\n        stylesOk = true;\r\n        onLoadingDone();\r\n      });\r\n      this.runScripts(() => {\r\n        scriptsOk = true;\r\n        onLoadingDone();\r\n      });\r\n    }\r\n\r\n    /**\r\n     * @param {!HTMLDocument} doc\r\n     */\r\n    flatten(doc) {\r\n      const n$ = /** @type {!NodeList<!HTMLLinkElement>} */\r\n        (doc.querySelectorAll(importSelector));\r\n      for (let i = 0, l = n$.length, n; i < l && (n = n$[i]); i++) {\r\n        const imp = this.documents[n.href];\r\n        n.import = /** @type {!Document} */ (imp);\r\n        if (imp && imp.nodeType === Node.DOCUMENT_FRAGMENT_NODE) {\r\n          // We set the .import to be the link itself, and update its readyState.\r\n          // Other links with the same href will point to this link.\r\n          this.documents[n.href] = n;\r\n          n.readyState = 'loading';\r\n          // Suppress Closure warning about incompatible subtype assignment.\r\n          ( /** @type {!HTMLElement} */ (n).import = n);\r\n          this.flatten(imp);\r\n          n.appendChild(imp);\r\n        }\r\n      }\r\n    }\r\n\r\n    /**\r\n     * Replaces all the imported scripts with a clone in order to execute them.\r\n     * Updates the `currentScript`.\r\n     * @param {!function()} callback\r\n     */\r\n    runScripts(callback) {\r\n      const s$ = document.querySelectorAll(pendingScriptsSelector);\r\n      const l = s$.length;\r\n      const cloneScript = i => {\r\n        if (i < l) {\r\n          // The pending scripts have been generated through innerHTML and\r\n          // browsers won't execute them for security reasons. We cannot use\r\n          // s.cloneNode(true) either, the only way to run the script is manually\r\n          // creating a new element and copying its attributes.\r\n          const s = s$[i];\r\n          const clone = /** @type {!HTMLScriptElement} */\r\n            (document.createElement('script'));\r\n          // Remove import-dependency attribute to avoid double cloning.\r\n          s.removeAttribute(importDependencyAttr);\r\n          for (let j = 0, ll = s.attributes.length; j < ll; j++) {\r\n            clone.setAttribute(s.attributes[j].name, s.attributes[j].value);\r\n          }\r\n          // Update currentScript and replace original with clone script.\r\n          currentScript = clone;\r\n          s.parentNode.replaceChild(clone, s);\r\n          whenElementLoaded(clone, () => {\r\n            currentScript = null;\r\n            cloneScript(i + 1);\r\n          });\r\n        } else {\r\n          callback();\r\n        }\r\n      };\r\n      cloneScript(0);\r\n    }\r\n\r\n    /**\r\n     * Waits for all the imported stylesheets/styles to be loaded.\r\n     * @param {!function()} callback\r\n     */\r\n    waitForStyles(callback) {\r\n      const s$ = /** @type {!NodeList<!(HTMLLinkElement|HTMLStyleElement)>} */\r\n        (document.querySelectorAll(pendingStylesSelector));\r\n      let pending = s$.length;\r\n      if (!pending) {\r\n        callback();\r\n        return;\r\n      }\r\n      // <link rel=stylesheet> should be appended to <head>. Not doing so\r\n      // in IE/Edge breaks the cascading order\r\n      // https://developer.microsoft.com/en-us/microsoft-edge/platform/issues/10472273/\r\n      // If there is one <link rel=stylesheet> imported, we must move all imported\r\n      // links and styles to <head>.\r\n      const needsMove = isIE && !!document.querySelector(disabledLinkSelector);\r\n      for (let i = 0, l = s$.length, s; i < l && (s = s$[i]); i++) {\r\n        // Listen for load/error events, remove selector once is done loading.\r\n        whenElementLoaded(s, () => {\r\n          s.removeAttribute(importDependencyAttr);\r\n          if (--pending === 0) {\r\n            callback();\r\n          }\r\n        });\r\n        // Check if was already moved to head, to handle the case where the element\r\n        // has already been moved but it is still loading.\r\n        if (needsMove && s.parentNode !== document.head) {\r\n          let rootImport = importForElement(s);\r\n          while (rootImport && importForElement(rootImport)) {\r\n            rootImport = importForElement(rootImport);\r\n          }\r\n          // Replace the element we're about to move with a placeholder.\r\n          // NOTE: we first have to append the element to the new parent, then\r\n          // we can put the placeholder at its place, otherwise load/error events\r\n          // seem to be fired too early.\r\n          const parent = s.parentNode,\r\n            next = s.nextSibling,\r\n            placeholder = document.createElement(s.localName);\r\n          // Add reference of the moved element.\r\n          placeholder['__appliedElement'] = s;\r\n          // Disable this from appearing in document.styleSheets.\r\n          placeholder.setAttribute('type', 'import-placeholder');\r\n          // First, re-parent the element...\r\n          if (rootImport.parentNode === document.head) {\r\n            document.head.insertBefore(s, rootImport);\r\n          } else {\r\n            document.head.appendChild(s);\r\n          }\r\n          // ...and then, insert the placeholder at the right place.\r\n          parent.insertBefore(placeholder, next);\r\n          // Enable the loading of <link rel=stylesheet>.\r\n          s.removeAttribute('type');\r\n        }\r\n      }\r\n    }\r\n\r\n    /**\r\n     * Fires load/error events for imports in the right order .\r\n     */\r\n    fireEvents() {\r\n      const n$ = /** @type {!NodeList<!HTMLLinkElement>} */\r\n        (document.querySelectorAll(importSelector));\r\n      // Inverse order to have events firing bottom-up.\r\n      for (let i = n$.length - 1, n; i >= 0 && (n = n$[i]); i--) {\r\n        this.fireEventIfNeeded(n);\r\n      }\r\n    }\r\n\r\n    /**\r\n     * Fires load/error event for the import if this wasn't done already.\r\n     * @param {!HTMLLinkElement} link\r\n     */\r\n    fireEventIfNeeded(link) {\r\n      // Don't fire twice same event.\r\n      if (!link['__loaded']) {\r\n        link['__loaded'] = true;\r\n        // Update link's import readyState.\r\n        link.import && (link.import.readyState = 'complete');\r\n        const eventType = link.import ? 'load' : 'error';\r\n        link.dispatchEvent(newCustomEvent(eventType, {\r\n          bubbles: false,\r\n          cancelable: false,\r\n          detail: undefined\r\n        }));\r\n      }\r\n    }\r\n\r\n    /**\r\n     * @param {Array<MutationRecord>} mutations\r\n     */\r\n    handleMutations(mutations) {\r\n      for (let i = 0; i < mutations.length; i++) {\r\n        const m = mutations[i];\r\n        if (!m.addedNodes) {\r\n          continue;\r\n        }\r\n        for (let ii = 0; ii < m.addedNodes.length; ii++) {\r\n          const link = m.addedNodes[ii];\r\n          if (!link || link.nodeType !== Node.ELEMENT_NODE) {\r\n            continue;\r\n          }\r\n          // NOTE: added scripts are not updating currentScript in IE.\r\n          // TODO add test w/ script & stylesheet maybe\r\n          if (isImportLink(link)) {\r\n            this.loadImport( /** @type {!HTMLLinkElement} */ (link));\r\n          } else {\r\n            this.loadImports( /** @type {!Element} */ (link));\r\n          }\r\n        }\r\n      }\r\n    }\r\n  }\r\n\r\n  /**\r\n   * @param {!Node} node\r\n   * @return {boolean}\r\n   */\r\n  const isImportLink = node => {\r\n    return node.nodeType === Node.ELEMENT_NODE && node.localName === 'link' &&\r\n      ( /** @type {!HTMLLinkElement} */ (node).rel === 'import');\r\n  };\r\n\r\n  /**\r\n   * Waits for an element to finish loading. If already done loading, it will\r\n   * mark the element accordingly.\r\n   * @param {!(HTMLLinkElement|HTMLScriptElement|HTMLStyleElement)} element\r\n   * @param {function()=} callback\r\n   */\r\n  const whenElementLoaded = (element, callback) => {\r\n    if (element['__loaded']) {\r\n      callback && callback();\r\n    } else if (element.localName === 'script' && !element.src) {\r\n      // Inline scripts don't trigger load/error events, consider them already loaded.\r\n      element['__loaded'] = true;\r\n      callback && callback();\r\n    } else {\r\n      const onLoadingDone = () => {\r\n        element.addEventListener('load', onLoadingDone);\r\n        element.removeEventListener('error', onLoadingDone);\r\n        element['__loaded'] = true;\r\n        callback && callback();\r\n      };\r\n      element.addEventListener('load', onLoadingDone);\r\n      // NOTE: We listen only for load events in IE/Edge, because in IE/Edge\r\n      // <style> with @import will fire error events for each failing @import,\r\n      // and finally will trigger the load event when all @import are\r\n      // finished (even if all fail).\r\n      if (!isIE || element.localName !== 'style') {\r\n        element.addEventListener('error', onLoadingDone);\r\n      }\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Calls the callback when all imports in the document at call time\r\n   * (or at least document ready) have loaded. Callback is called synchronously\r\n   * if imports are already done loading.\r\n   * @param {!function()} callback\r\n   */\r\n  const whenReady = callback => {\r\n    // 1. ensure the document is in a ready state (has dom), then\r\n    // 2. watch for loading of imports and call callback when done\r\n    whenDocumentReady(() => whenImportsReady(callback));\r\n  }\r\n\r\n  /**\r\n   * Invokes the callback when document is in ready state. Callback is called\r\n   *  synchronously if document is already done loading.\r\n   * @param {!function()} callback\r\n   */\r\n  const whenDocumentReady = callback => {\r\n    if (document.readyState !== 'loading') {\r\n      callback();\r\n    } else {\r\n      const stateChanged = () => {\r\n        if (document.readyState !== 'loading') {\r\n          document.removeEventListener('readystatechange', stateChanged);\r\n          callback();\r\n        }\r\n      }\r\n      document.addEventListener('readystatechange', stateChanged);\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Invokes the callback after all imports are loaded. Callback is called\r\n   * synchronously if imports are already done loading.\r\n   * @param {!function()} callback\r\n   */\r\n  const whenImportsReady = callback => {\r\n    let imports = /** @type {!NodeList<!HTMLLinkElement>} */\r\n      (document.querySelectorAll(rootImportSelector));\r\n    let pending = imports.length;\r\n    if (!pending) {\r\n      callback();\r\n      return;\r\n    }\r\n    for (let i = 0, l = imports.length, imp; i < l && (imp = imports[i]); i++) {\r\n      whenElementLoaded(imp, () => {\r\n        if (--pending === 0) {\r\n          callback();\r\n        }\r\n      });\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Returns the link that imported the element.\r\n   * @param {!Node} element\r\n   * @return {HTMLLinkElement|Document|undefined}\r\n   */\r\n  const importForElement = element => {\r\n    let owner = element['__ownerImport'];\r\n    if (!owner) {\r\n      owner = element;\r\n      // Walk up the parent tree until we find an import.\r\n      while ((owner = owner.parentNode || owner.host) && !isImportLink(owner)) {}\r\n      element['__ownerImport'] = owner;\r\n    }\r\n    return owner;\r\n  }\r\n\r\n  const newCustomEvent = (type, params) => {\r\n    if (typeof window.CustomEvent === 'function') {\r\n      return new CustomEvent(type, params);\r\n    }\r\n    const event = /** @type {!CustomEvent} */ (document.createEvent('CustomEvent'));\r\n    event.initCustomEvent(type, Boolean(params.bubbles), Boolean(params.cancelable), params.detail);\r\n    return event;\r\n  };\r\n\r\n  // Initialize Importer only after document is ready.\r\n  whenDocumentReady(() => new Importer());\r\n\r\n  /**\r\n    Add support for the `HTMLImportsLoaded` event and the `HTMLImports.whenReady`\r\n    method. This api is necessary because unlike the native implementation,\r\n    script elements do not force imports to resolve. Instead, users should wrap\r\n    code in either an `HTMLImportsLoaded` handler or after load time in an\r\n    `HTMLImports.whenReady(callback)` call.\r\n   */\r\n  whenReady(() => document.dispatchEvent(newCustomEvent('HTMLImportsLoaded', {\r\n    cancelable: true,\r\n    bubbles: true,\r\n    detail: undefined\r\n  })));\r\n\r\n  // exports\r\n  scope.useNative = false;\r\n  scope.whenReady = whenReady;\r\n  scope.importForElement = importForElement;\r\n\r\n})(window.HTMLImports = (window.HTMLImports || {}));\r\n"]}