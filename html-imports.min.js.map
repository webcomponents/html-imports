{"version":3,"sources":["/src/html-imports.js"],"names":["scope","importForElement","element","useNative","ownerDocument","owner","parentNode","host","isImportLink","whenImportsReady","callback","imports","document","querySelectorAll","rootImportSelector","promises","i","l","length","imp","push","whenElementLoaded","Promise","all","then","whenDocumentReady","readyState","stateChanged","removeEventListener","addEventListener","whenReady","resolve","localName","src","isIE","node","nodeType","Node","ELEMENT_NODE","MATCHES","call","importSelector","constructor","Importer","documents","inflight","observe","MutationObserver","m","handleMutations","head","childList","subtree","load","createElement","currentScript","Object","defineProperty","get","scripts","configurable","ABS_URL_TEST","CSS_URL_REGEXP","CSS_IMPORT_REGEXP","STYLESHEET_REGEXP","Path","fixUrls","base","href","setAttribute","replaceAttrUrl","getAttribute","resolveUrlsInStyle","fixUrlAttributes","attrs","a","at","attributes","v","value","search","resolveUrlsInCssText","fixUrlsInTemplates","t$","fixUrlsInTemplate","template","content","n$","n","style","linkUrl","textContent","cssText","r","replaceUrls","text","regexp","replace","pre","url","post","urlPath","resolveUrl","test","undefined","__workingURL","u","URL","pathname","e","doc","__tempDoc","implementation","createHTMLDocument","__base","appendChild","__anchor","Xhr","async","reject","match","pieces","split","resource","header","indexOf","atob","decodeURIComponent","request","XMLHttpRequest","open","redirectedUrl","locationHeader","getResponseHeader","substr","location","origin","console","error","message","resp","response","responseText","status","send","navigator","userAgent","Element","prototype","matches","matchesSelector","mozMatchesSelector","msMatchesSelector","oMatchesSelector","webkitMatchesSelector","link","whenLoadedPromise","whenImportLoaded","whenImportsLoaded","onLoadedAll","links","promise","makeDocument","catch","createDocumentFragment","p1","p2","innerHTML","firstElementChild","baseEl","querySelector","removeAttribute","s$","s","importDependenciesSelector","inlineScriptIndex","importDependencyAttr","encodeURIComponent","num","flatten","waitForStyles","runScripts","fireEvents","import","DOCUMENT_FRAGMENT_NODE","pendingScriptsSelector","clone","j","ll","name","replaceChild","needsMove","disabledLinkSelector","pendingStylesSelector","rootImport","parent","next","nextSibling","placeholder","insertBefore","fireEventIfNeeded","dispatchEvent","CustomEvent","eventType","bubbles","cancelable","detail","mutations","addedNodes","ii","iii","onLoadingDone","event","elem","target","window","HTMLImports"],"mappings":"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","file":"html-imports.min.js","sourcesContent":["/**\r\n * @license\r\n * Copyright (c) 2016 The Polymer Project Authors. All rights reserved.\r\n * This code may only be used under the BSD style license found at http://polymer.github.io/LICENSE.txt\r\n * The complete set of authors may be found at http://polymer.github.io/AUTHORS.txt\r\n * The complete set of contributors may be found at http://polymer.github.io/CONTRIBUTORS.txt\r\n * Code distributed by Google as part of the polymer project is also\r\n * subject to an additional IP rights grant found at http://polymer.github.io/PATENTS.txt\r\n */\r\n(scope => {\r\n\r\n  /********************* base setup *********************/\r\n  const useNative = Boolean('import' in document.createElement('link'));\r\n\r\n  // Polyfill `currentScript` for browsers without it.\r\n  let currentScript = null;\r\n  if ('currentScript' in document === false) {\r\n    Object.defineProperty(document, 'currentScript', {\r\n      get() {\r\n        return currentScript ||\r\n          // NOTE: only works when called in synchronously executing code.\r\n          // readyState should check if `loading` but IE10 is\r\n          // interactive when scripts run so we cheat. This is not needed by\r\n          // html-imports polyfill but helps generally polyfill `currentScript`.\r\n          (document.readyState !== 'complete' ?\r\n            document.scripts[document.scripts.length - 1] : null);\r\n      },\r\n      configurable: true\r\n    });\r\n  }\r\n\r\n  /********************* path fixup *********************/\r\n  const ABS_URL_TEST = /(^\\/)|(^#)|(^[\\w-\\d]*:)/;\r\n  const CSS_URL_REGEXP = /(url\\()([^)]*)(\\))/g;\r\n  const CSS_IMPORT_REGEXP = /(@import[\\s]+(?!url\\())([^;]*)(;)/g;\r\n  const STYLESHEET_REGEXP = /(<link[^>]*)(rel=['|\"]?stylesheet['|\"]?[^>]*>)/g;\r\n\r\n  // path fixup: style elements in imports must be made relative to the main\r\n  // document. We fixup url's in url() and @import.\r\n  const Path = {\r\n\r\n    fixUrls(element, base) {\r\n      if (element.href) {\r\n        element.setAttribute('href',\r\n          Path.replaceAttrUrl(element.getAttribute('href'), base));\r\n      }\r\n      if (element.src) {\r\n        element.setAttribute('src',\r\n          Path.replaceAttrUrl(element.getAttribute('src'), base));\r\n      }\r\n      if (element.localName === 'style') {\r\n        Path.resolveUrlsInStyle(element, base);\r\n      }\r\n    },\r\n\r\n    fixUrlAttributes(element, base) {\r\n      const attrs = ['action', 'src', 'href', 'url', 'style'];\r\n      for (let i = 0, a; i < attrs.length && (a = attrs[i]); i++) {\r\n        const at = element.attributes[a];\r\n        const v = at && at.value;\r\n        // Skip bound attribute values (assume binding is done via {} and []).\r\n        // TODO(valdrin) consider exposing a library-implementable hook.\r\n        if (v && (v.search(/({{|\\[\\[)/) < 0)) {\r\n          at.value = (a === 'style') ?\r\n            Path.resolveUrlsInCssText(v, base) :\r\n            Path.replaceAttrUrl(v, base);\r\n        }\r\n      }\r\n    },\r\n\r\n    fixUrlsInTemplates(element, base) {\r\n      const t$ = element.querySelectorAll('template');\r\n      for (let i = 0; i < t$.length; i++) {\r\n        Path.fixUrlsInTemplate(t$[i], base);\r\n      }\r\n    },\r\n\r\n    fixUrlsInTemplate(template, base) {\r\n      const content = template.content;\r\n      if (!content) { // Template not supported.\r\n        return;\r\n      }\r\n      const n$ = content.querySelectorAll(\r\n        'style, form[action], [src], [href], [url], [style]');\r\n      for (let i = 0; i < n$.length; i++) {\r\n        const n = n$[i];\r\n        if (n.localName == 'style') {\r\n          Path.resolveUrlsInStyle(n, base);\r\n        } else {\r\n          Path.fixUrlAttributes(n, base);\r\n        }\r\n      }\r\n      Path.fixUrlsInTemplates(content, base);\r\n    },\r\n\r\n    resolveUrlsInStyle(style, linkUrl) {\r\n      style.textContent = Path.resolveUrlsInCssText(style.textContent, linkUrl);\r\n    },\r\n\r\n    resolveUrlsInCssText(cssText, linkUrl) {\r\n      let r = Path.replaceUrls(cssText, linkUrl, CSS_URL_REGEXP);\r\n      r = Path.replaceUrls(r, linkUrl, CSS_IMPORT_REGEXP);\r\n      return r;\r\n    },\r\n\r\n    replaceUrls(text, linkUrl, regexp) {\r\n      return text.replace(regexp, (m, pre, url, post) => {\r\n        let urlPath = url.replace(/[\"']/g, '');\r\n        if (linkUrl) {\r\n          urlPath = Path.resolveUrl(urlPath, linkUrl);\r\n        }\r\n        return pre + '\\'' + urlPath + '\\'' + post;\r\n      });\r\n    },\r\n\r\n    replaceAttrUrl(text, linkUrl) {\r\n      if (text && ABS_URL_TEST.test(text)) {\r\n        return text;\r\n      } else {\r\n        return Path.resolveUrl(text, linkUrl);\r\n      }\r\n    },\r\n\r\n    resolveUrl(url, base) {\r\n      // Lazy feature detection.\r\n      if (Path.__workingURL === undefined) {\r\n        Path.__workingURL = false;\r\n        try {\r\n          const u = new URL('b', 'http://a');\r\n          u.pathname = 'c%20d';\r\n          Path.__workingURL = (u.href === 'http://a/c%20d');\r\n        } catch (e) {}\r\n      }\r\n\r\n      if (Path.__workingURL) {\r\n        return (new URL(url, base)).href;\r\n      }\r\n\r\n      // Fallback to creating an anchor into a disconnected document.\r\n      let doc = Path.__tempDoc;\r\n      if (!doc) {\r\n        doc = document.implementation.createHTMLDocument('temp');\r\n        Path.__tempDoc = doc;\r\n        doc.__base = doc.createElement('base');\r\n        doc.head.appendChild(doc.__base);\r\n        doc.__anchor = doc.createElement('a');\r\n      }\r\n      doc.__base.href = base;\r\n      doc.__anchor.href = url;\r\n      return doc.__anchor.href || url;\r\n    }\r\n  };\r\n\r\n  /********************* Xhr processor *********************/\r\n  const Xhr = {\r\n\r\n    async: true,\r\n\r\n    /**\r\n     * @param {!string} url\r\n     * @return {!Promise}\r\n     */\r\n    load(url) {\r\n      return new Promise((resolve, reject) => {\r\n        if (!url) {\r\n          reject({\r\n            resource: 'error: href must be specified'\r\n          });\r\n        } else if (url.match(/^data:/)) {\r\n          // Handle Data URI Scheme\r\n          const pieces = url.split(',');\r\n          const header = pieces[0];\r\n          let resource = pieces[1];\r\n          if (header.indexOf(';base64') > -1) {\r\n            resource = atob(resource);\r\n          } else {\r\n            resource = decodeURIComponent(resource);\r\n          }\r\n          resolve({\r\n            resource: resource\r\n          });\r\n        } else {\r\n          const request = new XMLHttpRequest();\r\n          request.open('GET', url, Xhr.async);\r\n          request.addEventListener('readystatechange', () => {\r\n            if (request.readyState === 4) {\r\n              // Servers redirecting an import can add a Location header to help us\r\n              // polyfill correctly.\r\n              let redirectedUrl = undefined;\r\n              try {\r\n                const locationHeader = request.getResponseHeader('Location');\r\n                if (locationHeader) {\r\n                  // Relative or full path.\r\n                  redirectedUrl = (locationHeader.substr(0, 1) === '/') ?\r\n                    location.origin + locationHeader : locationHeader;\r\n                }\r\n              } catch (e) {\r\n                console.error(e.message);\r\n              }\r\n              const resp = {\r\n                resource: (request.response || request.responseText),\r\n                redirectedUrl: redirectedUrl\r\n              };\r\n              if (request.status === 304 || request.status === 0 ||\r\n                request.status >= 200 && request.status < 300) {\r\n                resolve(resp);\r\n              } else {\r\n                reject(resp);\r\n              }\r\n            }\r\n          });\r\n          request.send();\r\n        }\r\n      });\r\n    }\r\n  };\r\n\r\n  /********************* importer *********************/\r\n\r\n  const isIE = /Trident/.test(navigator.userAgent) ||\r\n    /Edge\\/\\d./i.test(navigator.userAgent);\r\n\r\n  const importSelector = 'link[rel=import]';\r\n\r\n  // Used to disable loading of resources.\r\n  const importDisableType = 'import-disable';\r\n\r\n  const disabledLinkSelector = `link[rel=stylesheet][href][type=${importDisableType}]`;\r\n\r\n  const importDependenciesSelector = `${importSelector},\r\nstyle:not([type]), style[type=\"text/css\"], ${disabledLinkSelector},\r\nlink[rel=stylesheet][href]:not([type]), link[rel=stylesheet][href][type=\"text/css\"],\r\nscript:not([type]), script[type=\"application/javascript\"],\r\nscript[type=\"text/javascript\"]`;\r\n\r\n  const importDependencyAttr = 'import-dependency';\r\n\r\n  const rootImportSelector = `${importSelector}:not(${importDependencyAttr})`;\r\n\r\n  const pendingScriptsSelector = `script[${importDependencyAttr}]`;\r\n\r\n  const pendingStylesSelector = `style[${importDependencyAttr}],\r\nlink[rel=stylesheet][${importDependencyAttr}]`;\r\n\r\n  /**\r\n   * @type {Function}\r\n   */\r\n  const MATCHES = Element.prototype.matches ||\r\n    Element.prototype.matchesSelector ||\r\n    Element.prototype.mozMatchesSelector ||\r\n    Element.prototype.msMatchesSelector ||\r\n    Element.prototype.oMatchesSelector ||\r\n    Element.prototype.webkitMatchesSelector;\r\n\r\n  /**\r\n   * Importer will:\r\n   * - load any linked import documents (with deduping)\r\n   * - whenever an import is loaded, prompt the parser to try to parse\r\n   * - observe imported documents for new elements (these are handled via the\r\n   *   dynamic importer)\r\n   */\r\n  class Importer {\r\n    constructor() {\r\n      this.documents = {};\r\n      // Used to keep track of pending loads, so that flattening and firing of\r\n      // events can be done when all resources are ready.\r\n      this.inflight = 0;\r\n      // 1. Load imports contents\r\n      // 2. Assign them to first import links on the document\r\n      // 3. Wait for import styles & scripts to be done loading/running\r\n      // 4. Fire load/error events\r\n      whenDocumentReady(() => {\r\n        // Observe changes on <head>.\r\n        new MutationObserver(m => this.handleMutations(m)).observe(document.head, {\r\n          childList: true,\r\n          subtree: true\r\n        });\r\n        this.load();\r\n      });\r\n    }\r\n\r\n    /**\r\n     * Loads the resources needed by the import link and fires the load/error\r\n     * event on the node once finished. If link is not defined or null, loads\r\n     * all imports in the main document.\r\n     * @param {HTMLLinkElement=} link\r\n     */\r\n    load(link) {\r\n      const whenLoadedPromise = link ? this.whenImportLoaded(link) :\r\n        this.whenImportsLoaded(document);\r\n      if (whenLoadedPromise) {\r\n        this.inflight++;\r\n        whenLoadedPromise.then(() => {\r\n          // Wait until all resources are ready.\r\n          if (--this.inflight === 0) {\r\n            this.onLoadedAll();\r\n          }\r\n        });\r\n      }\r\n    }\r\n\r\n    /**\r\n     * @param {!(HTMLDocument|DocumentFragment)} doc\r\n     * @return {Promise|null}\r\n     */\r\n    whenImportsLoaded(doc) {\r\n      const links = /** @type {!NodeList<!HTMLLinkElement>} */\r\n        (doc.querySelectorAll(importSelector));\r\n      const promises = [];\r\n      for (let i = 0, l = links.length; i < l; i++) {\r\n        const promise = this.whenImportLoaded(links[i]);\r\n        if (promise) {\r\n          promises.push(promise);\r\n        }\r\n      }\r\n      return promises.length ? Promise.all(promises).then(() => doc) : null;\r\n    }\r\n\r\n    /**\r\n     * @param {!HTMLLinkElement} link\r\n     * @return {Promise|null}\r\n     */\r\n    whenImportLoaded(link) {\r\n      const url = link.href;\r\n      // This resource is already being handled by another import.\r\n      if (this.documents[url] !== undefined) {\r\n        return null;\r\n      }\r\n      // Mark it as pending to notify others this url is being loaded.\r\n      this.documents[url] = 'pending';\r\n      return Xhr.load(url)\r\n        .then(resp => {\r\n          const doc = this.makeDocument(resp.resource, resp.redirectedUrl || url);\r\n          this.documents[url] = doc;\r\n          // Load subtree.\r\n          return this.whenImportsLoaded(doc);\r\n        })\r\n        .catch(() => this.documents[url] = null)\r\n        .then(() => link);\r\n    }\r\n\r\n    /**\r\n     * Creates a new document containing resource and normalizes urls accordingly.\r\n     * @param {string=} resource\r\n     * @param {string=} url\r\n     * @return {!DocumentFragment}\r\n     */\r\n    makeDocument(resource, url) {\r\n      if (!resource) {\r\n        return document.createDocumentFragment();\r\n      }\r\n\r\n      if (isIE) {\r\n        // <link rel=stylesheet> should be appended to <head>. Not doing so\r\n        // in IE/Edge breaks the cascading order. We disable the loading by\r\n        // setting the type before setting innerHTML to avoid loading\r\n        // resources twice.\r\n        resource = resource.replace(STYLESHEET_REGEXP, (match, p1, p2) => {\r\n          if (match.indexOf('type=') === -1) {\r\n            return `${p1} type=${importDisableType} ${p2}`;\r\n          }\r\n          return match;\r\n        });\r\n      }\r\n\r\n      let content;\r\n      const template = /** @type {!HTMLTemplateElement} */\r\n        (document.createElement('template'));\r\n      template.innerHTML = resource;\r\n      if (template.content) {\r\n        // This creates issues in Safari10 when used with shadydom (see #12).\r\n        content = template.content;\r\n      } else {\r\n        // <template> not supported, create fragment and move children into it.\r\n        content = document.createDocumentFragment();\r\n        while (template.firstElementChild) {\r\n          content.appendChild(template.firstElementChild);\r\n        }\r\n      }\r\n\r\n      // Support <base> in imported docs. Resolve url and remove its href.\r\n      const baseEl = content.querySelector('base');\r\n      if (baseEl) {\r\n        url = Path.replaceAttrUrl(baseEl.getAttribute('href'), url);\r\n        baseEl.removeAttribute('href');\r\n      }\r\n\r\n      // This is specific to users of <dom-module> (Polymer).\r\n      // TODO(valdrin) remove this when Polymer uses importForElement.\r\n      const s$ = content.querySelectorAll('dom-module');\r\n      for (let i = 0, s; i < s$.length && (s = s$[i]); i++) {\r\n        s.setAttribute('assetpath',\r\n          Path.replaceAttrUrl(s.getAttribute('assetpath') || '', url));\r\n      }\r\n\r\n      const n$ = /** @type {!NodeList<!(HTMLLinkElement|HTMLScriptElement|HTMLStyleElement)>} */\r\n        (content.querySelectorAll(importDependenciesSelector));\r\n      // For source map hints.\r\n      let inlineScriptIndex = 0;\r\n      for (let i = 0, l = n$.length, n; i < l && (n = n$[i]); i++) {\r\n        // Listen for load/error events, then fix urls.\r\n        whenElementLoaded(n);\r\n        Path.fixUrls(n, url);\r\n        // Mark for easier selectors.\r\n        n.setAttribute(importDependencyAttr, '');\r\n        // Generate source map hints for inline scripts.\r\n        if (n.localName === 'script' && !n.src && n.textContent) {\r\n          const num = inlineScriptIndex ? `-${inlineScriptIndex}` : '';\r\n          const content = n.textContent + `\\n//# sourceURL=${url}${num}.js\\n`;\r\n          // We use the src attribute so it triggers load/error events, and it's\r\n          // easier to capture errors (e.g. parsing) like this.\r\n          n.setAttribute('src', 'data:text/javascript;charset=utf-8,' + encodeURIComponent(content));\r\n          n.textContent = '';\r\n          inlineScriptIndex++;\r\n        }\r\n      }\r\n      Path.fixUrlsInTemplates(content, url);\r\n      return content;\r\n    }\r\n\r\n    onLoadedAll() {\r\n      this.flatten(document);\r\n      // We wait for styles to load, and at the same time we execute the scripts,\r\n      // then fire the load/error events for imports to have faster whenReady\r\n      // callback execution.\r\n      // NOTE: This is different for native behavior where scripts would be\r\n      // executed after the styles before them are loaded.\r\n      // To achieve that, we could select pending styles and scripts in the\r\n      // document and execute them sequentially in their dom order.\r\n      Promise.all([this.waitForStyles(), this.runScripts()])\r\n        .then(() => this.fireEvents());\r\n    }\r\n\r\n    /**\r\n     * @param {!HTMLDocument} doc\r\n     */\r\n    flatten(doc) {\r\n      const n$ = /** @type {!NodeList<!HTMLLinkElement>} */\r\n        (doc.querySelectorAll(importSelector));\r\n      for (let i = 0, l = n$.length, n; i < l && (n = n$[i]); i++) {\r\n        const imp = this.documents[n.href];\r\n        n.import = /** @type {!Document} */ (imp);\r\n        if (imp && imp.nodeType === Node.DOCUMENT_FRAGMENT_NODE) {\r\n          // We set the .import to be the link itself, and update its readyState.\r\n          // Other links with the same href will point to this link.\r\n          this.documents[n.href] = n;\r\n          n.readyState = 'loading';\r\n          // Suppress Closure warning about incompatible subtype assignment.\r\n          ( /** @type {!HTMLElement} */ (n).import = n);\r\n          this.flatten(imp);\r\n          n.appendChild(imp);\r\n        }\r\n      }\r\n    }\r\n\r\n    /**\r\n     * Replaces all the imported scripts with a clone in order to execute them.\r\n     * Updates the `currentScript`.\r\n     * @return {Promise} Resolved when scripts are loaded.\r\n     */\r\n    runScripts() {\r\n      const s$ = document.querySelectorAll(pendingScriptsSelector);\r\n      let promise = Promise.resolve();\r\n      for (let i = 0, l = s$.length, s; i < l && (s = s$[i]); i++) {\r\n        promise = promise.then(() => {\r\n          // The pending scripts have been generated through innerHTML and\r\n          // browsers won't execute them for security reasons. We cannot use\r\n          // s.cloneNode(true) either, the only way to run the script is manually\r\n          // creating a new element and copying its attributes.\r\n          const clone = /** @type {!HTMLScriptElement} */\r\n            (document.createElement('script'));\r\n          // Remove import-dependency attribute to avoid double cloning.\r\n          s.removeAttribute(importDependencyAttr);\r\n          for (let j = 0, ll = s.attributes.length; j < ll; j++) {\r\n            clone.setAttribute(s.attributes[j].name, s.attributes[j].value);\r\n          }\r\n\r\n          // Update currentScript and replace original with clone script.\r\n          currentScript = clone;\r\n          s.parentNode.replaceChild(clone, s);\r\n          // Wait for load/error events; after is loaded, reset currentScript.\r\n          return whenElementLoaded(clone).then(() => currentScript = null);\r\n        });\r\n      }\r\n      return promise;\r\n    }\r\n\r\n    /**\r\n     * Waits for all the imported stylesheets/styles to be loaded.\r\n     * @return {Promise}\r\n     */\r\n    waitForStyles() {\r\n      // <link rel=stylesheet> should be appended to <head>. Not doing so\r\n      // in IE/Edge breaks the cascading order\r\n      // https://developer.microsoft.com/en-us/microsoft-edge/platform/issues/10472273/\r\n      // If there is one <link rel=stylesheet> imported, we must move all imported\r\n      // links and styles to <head>.\r\n      const needsMove = !!document.querySelector(disabledLinkSelector);\r\n      const s$ = /** @type {!NodeList<!(HTMLLinkElement|HTMLStyleElement)>} */\r\n        (document.querySelectorAll(pendingStylesSelector));\r\n      const promises = [];\r\n      for (let i = 0, l = s$.length, s; i < l && (s = s$[i]); i++) {\r\n        // Listen for load/error events, remove selector once is done loading.\r\n        promises.push(whenElementLoaded(s)\r\n          .then(() => s.removeAttribute(importDependencyAttr)));\r\n        // Check if was already moved to head, to handle the case where the element\r\n        // has already been moved but it is still loading.\r\n        if (needsMove && s.parentNode !== document.head) {\r\n          let rootImport = importForElement(s);\r\n          while (rootImport && importForElement(rootImport)) {\r\n            rootImport = importForElement(rootImport);\r\n          }\r\n          // Replace the element we're about to move with a placeholder.\r\n          // NOTE: we first have to append the element to the new parent, then\r\n          // we can put the placeholder at its place, otherwise load/error events\r\n          // seem to be fired too early.\r\n          const parent = s.parentNode,\r\n            next = s.nextSibling,\r\n            placeholder = document.createElement(s.localName);\r\n          // Add reference of the moved element.\r\n          placeholder['__appliedElement'] = s;\r\n          // Disable this from appearing in document.styleSheets.\r\n          placeholder.setAttribute('type', 'import-placeholder');\r\n          // First, re-parent the element...\r\n          if (rootImport.parentNode === document.head) {\r\n            document.head.insertBefore(s, rootImport);\r\n          } else {\r\n            document.head.appendChild(s);\r\n          }\r\n          // ...and then, insert the placeholder at the right place.\r\n          parent.insertBefore(placeholder, next);\r\n          // Enable the loading of <link rel=stylesheet>.\r\n          s.removeAttribute('type');\r\n        }\r\n      }\r\n      return Promise.all(promises);\r\n    }\r\n\r\n    /**\r\n     * Fires load/error events for imports in the right order .\r\n     */\r\n    fireEvents() {\r\n      const n$ = /** @type {!NodeList<!HTMLLinkElement>} */\r\n        (document.querySelectorAll(importSelector));\r\n      // Inverse order to have events firing bottom-up.\r\n      for (let i = n$.length - 1, n; i >= 0 && (n = n$[i]); i--) {\r\n        this.fireEventIfNeeded(n);\r\n      }\r\n    }\r\n\r\n    /**\r\n     * Fires load/error event for the import if this wasn't done already.\r\n     * @param {!HTMLLinkElement} link\r\n     */\r\n    fireEventIfNeeded(link) {\r\n      // Don't fire twice same event.\r\n      if (!link['__loaded']) {\r\n        link['__loaded'] = true;\r\n        // Update link's import readyState.\r\n        link.import && (link.import.readyState = 'complete');\r\n        const eventType = link.import ? 'load' : 'error';\r\n        link.dispatchEvent(new CustomEvent(eventType, {\r\n          bubbles: false,\r\n          cancelable: false,\r\n          detail: undefined\r\n        }));\r\n      }\r\n    }\r\n\r\n    /**\r\n     * @param {Array<MutationRecord>} mutations\r\n     */\r\n    handleMutations(mutations) {\r\n      for (let i = 0; i < mutations.length; i++) {\r\n        const m = mutations[i];\r\n        if (!m.addedNodes) {\r\n          continue;\r\n        }\r\n        for (let ii = 0; ii < m.addedNodes.length; ii++) {\r\n          const link = m.addedNodes[ii];\r\n          if (!link || link.nodeType !== Node.ELEMENT_NODE) {\r\n            continue;\r\n          }\r\n          // NOTE: added scripts are not updating currentScript in IE.\r\n          // TODO add test w/ script & stylesheet maybe\r\n          const imports = /** @type {!NodeList<!HTMLLinkElement>} */\r\n            (isImportLink(link) ? [link] : link.querySelectorAll(importSelector));\r\n          for (let iii = 0; iii < imports.length; iii++) {\r\n            const n = imports[iii];\r\n            const imp = this.documents[n.href];\r\n            // First time we see this import, load.\r\n            if (imp === undefined) {\r\n              this.load(n);\r\n            }\r\n            // If nothing else is loading, we can safely associate the import\r\n            // and fire the load/error event.\r\n            else if (!this.inflight) {\r\n              n.import = imp;\r\n              this.fireEventIfNeeded(n);\r\n            }\r\n          }\r\n        }\r\n      }\r\n    }\r\n  }\r\n\r\n  /**\r\n   * @param {!Node} node\r\n   * @return {boolean}\r\n   */\r\n  const isImportLink = node => {\r\n    return node.nodeType === Node.ELEMENT_NODE && MATCHES.call(node, importSelector);\r\n  };\r\n\r\n  /**\r\n   * Waits for an element to finish loading. If already done loading, it will\r\n   * mark the element accordingly.\r\n   * @param {!(HTMLLinkElement|HTMLScriptElement|HTMLStyleElement)} element\r\n   * @return {Promise}\r\n   */\r\n  const whenElementLoaded = element => {\r\n    if (!element['__loadPromise']) {\r\n      element['__loadPromise'] = new Promise(resolve => {\r\n        // Inline scripts don't trigger load/error events, consider them already loaded.\r\n        if (element.localName === 'script' && !element.src) {\r\n          resolve();\r\n        } else if (isIE && element.localName === 'style') {\r\n          // NOTE: We listen only for load events in IE/Edge, because in IE/Edge\r\n          // <style> with @import will fire error events for each failing @import,\r\n          // and finally will trigger the load event when all @import are\r\n          // finished (even if all fail).\r\n          element.addEventListener('load', resolve);\r\n        } else {\r\n          element.addEventListener('load', resolve);\r\n          element.addEventListener('error', resolve);\r\n        }\r\n      }).then(() => {\r\n        element['__loaded'] = true;\r\n        return element;\r\n      });\r\n    }\r\n    return element['__loadPromise'];\r\n  }\r\n\r\n  /**\r\n   * Calls the callback when all imports in the document at call time\r\n   * (or at least document ready) have loaded. Callback is called synchronously\r\n   * if imports are already done loading.\r\n   * @param {function()=} callback\r\n   */\r\n  const whenReady = callback => {\r\n    // 1. ensure the document is in a ready state (has dom), then\r\n    // 2. watch for loading of imports and call callback when done\r\n    whenDocumentReady(() => whenImportsReady(() => callback && callback()));\r\n  }\r\n\r\n  /**\r\n   * Invokes the callback when document is in ready state. Callback is called\r\n   *  synchronously if document is already done loading.\r\n   * @param {!function()} callback\r\n   */\r\n  const whenDocumentReady = callback => {\r\n    if (document.readyState !== 'loading') {\r\n      callback();\r\n    } else {\r\n      const stateChanged = () => {\r\n        if (document.readyState !== 'loading') {\r\n          document.removeEventListener('readystatechange', stateChanged);\r\n          callback();\r\n        }\r\n      }\r\n      document.addEventListener('readystatechange', stateChanged);\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Invokes the callback after all imports are loaded. Callback is called\r\n   * synchronously if imports are already done loading.\r\n   * @param {!function()} callback\r\n   */\r\n  const whenImportsReady = callback => {\r\n    let imports = /** @type {!NodeList<!HTMLLinkElement>} */\r\n      (document.querySelectorAll(rootImportSelector));\r\n    const promises = [];\r\n    for (let i = 0, l = imports.length, imp; i < l && (imp = imports[i]); i++) {\r\n      if (!imp['__loaded']) {\r\n        promises.push(whenElementLoaded(imp));\r\n      }\r\n    }\r\n    if (promises.length) {\r\n      Promise.all(promises).then(callback);\r\n    } else {\r\n      callback();\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Returns the link that imported the element.\r\n   * @param {!Node} element\r\n   * @return {HTMLLinkElement|Document|undefined}\r\n   */\r\n  const importForElement = element => {\r\n    if (useNative) {\r\n      return element.ownerDocument;\r\n    }\r\n    let owner = element['__ownerImport'];\r\n    if (!owner) {\r\n      owner = element;\r\n      // Walk up the parent tree until we find an import.\r\n      while ((owner = owner.parentNode || owner.host) && !isImportLink(owner)) {}\r\n      element['__ownerImport'] = owner;\r\n    }\r\n    return owner;\r\n  }\r\n\r\n  /**\r\n    Add support for the `HTMLImportsLoaded` event and the `HTMLImports.whenReady`\r\n    method. This api is necessary because unlike the native implementation,\r\n    script elements do not force imports to resolve. Instead, users should wrap\r\n    code in either an `HTMLImportsLoaded` handler or after load time in an\r\n    `HTMLImports.whenReady(callback)` call.\r\n\r\n    NOTE: This module also supports these apis under the native implementation.\r\n    Therefore, if this file is loaded, the same code can be used under both\r\n    the polyfill and native implementation.\r\n   */\r\n  whenReady(() => document.dispatchEvent(new CustomEvent('HTMLImportsLoaded', {\r\n    cancelable: true,\r\n    bubbles: true,\r\n    detail: undefined\r\n  })));\r\n\r\n  if (useNative) {\r\n    // Listen for load/error events to capture dynamically added scripts.\r\n    /**\r\n     * @type {!function(!Event)}\r\n     */\r\n    const onLoadingDone = event => {\r\n      const elem = /** @type {!Element} */ (event.target);\r\n      if (isImportLink(elem)) {\r\n        elem['__loaded'] = true;\r\n      }\r\n    };\r\n    document.addEventListener('load', onLoadingDone, true /* useCapture */ );\r\n    document.addEventListener('error', onLoadingDone, true /* useCapture */ );\r\n  } else {\r\n    new Importer();\r\n  }\r\n\r\n  // exports\r\n  scope.useNative = useNative;\r\n  scope.whenReady = whenReady;\r\n  scope.importForElement = importForElement;\r\n\r\n})(window.HTMLImports = (window.HTMLImports || {}));\r\n"]}