{"version":3,"sources":["/src/html-imports.js"],"names":["scope","importForElement","element","useNative","ownerDocument","owner","parentNode","host","isImportLink","whenImportsReady","callback","imports","document","querySelectorAll","rootImportSelector","promises","i","l","length","imp","push","whenElementLoaded","Promise","all","then","whenDocumentReady","readyState","stateChanged","removeEventListener","addEventListener","whenReady","resolve","localName","src","isIE","node","nodeType","Node","ELEMENT_NODE","rel","constructor","Importer","documents","inflight","observe","MutationObserver","m","handleMutations","head","childList","subtree","load","createElement","currentScript","Object","defineProperty","get","scripts","configurable","ABS_URL_TEST","CSS_URL_REGEXP","CSS_IMPORT_REGEXP","STYLESHEET_REGEXP","Path","fixUrls","base","href","setAttribute","replaceAttrUrl","getAttribute","resolveUrlsInStyle","fixUrlAttributes","attrs","a","at","attributes","v","value","search","resolveUrlsInCssText","fixUrlsInTemplates","t$","fixUrlsInTemplate","template","content","n$","n","style","linkUrl","textContent","cssText","r","replaceUrls","text","regexp","replace","pre","url","post","urlPath","resolveUrl","test","undefined","__workingURL","u","URL","pathname","e","doc","__tempDoc","implementation","createHTMLDocument","__base","appendChild","__anchor","Xhr","async","reject","match","pieces","split","resource","header","indexOf","atob","decodeURIComponent","request","XMLHttpRequest","open","redirectedUrl","locationHeader","getResponseHeader","substr","location","origin","console","error","message","resp","response","responseText","status","send","navigator","userAgent","link","whenLoadedPromise","whenImportLoaded","whenImportsLoaded","onLoadedAll","links","importSelector","promise","makeDocument","catch","createDocumentFragment","p1","p2","innerHTML","firstElementChild","baseEl","querySelector","removeAttribute","s$","s","importDependenciesSelector","inlineScriptIndex","importDependencyAttr","encodeURIComponent","num","flatten","waitForStyles","runScripts","fireEvents","import","DOCUMENT_FRAGMENT_NODE","pendingScriptsSelector","clone","j","ll","name","replaceChild","needsMove","disabledLinkSelector","pendingStylesSelector","rootImport","parent","next","nextSibling","placeholder","insertBefore","fireEventIfNeeded","dispatchEvent","CustomEvent","eventType","bubbles","cancelable","detail","mutations","addedNodes","ii","iii","onLoadingDone","event","elem","target","window","HTMLImports"],"mappings":"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","file":"html-imports.min.js","sourcesContent":["/**\n * @license\n * Copyright (c) 2016 The Polymer Project Authors. All rights reserved.\n * This code may only be used under the BSD style license found at http://polymer.github.io/LICENSE.txt\n * The complete set of authors may be found at http://polymer.github.io/AUTHORS.txt\n * The complete set of contributors may be found at http://polymer.github.io/CONTRIBUTORS.txt\n * Code distributed by Google as part of the polymer project is also\n * subject to an additional IP rights grant found at http://polymer.github.io/PATENTS.txt\n */\n(scope => {\n\n  /********************* base setup *********************/\n  const useNative = Boolean('import' in document.createElement('link'));\n\n  // Polyfill `currentScript` for browsers without it.\n  let currentScript = null;\n  if ('currentScript' in document === false) {\n    Object.defineProperty(document, 'currentScript', {\n      get() {\n        return currentScript ||\n          // NOTE: only works when called in synchronously executing code.\n          // readyState should check if `loading` but IE10 is\n          // interactive when scripts run so we cheat. This is not needed by\n          // html-imports polyfill but helps generally polyfill `currentScript`.\n          (document.readyState !== 'complete' ?\n            document.scripts[document.scripts.length - 1] : null);\n      },\n      configurable: true\n    });\n  }\n\n  /********************* path fixup *********************/\n  const ABS_URL_TEST = /(^\\/)|(^#)|(^[\\w-\\d]*:)/;\n  const CSS_URL_REGEXP = /(url\\()([^)]*)(\\))/g;\n  const CSS_IMPORT_REGEXP = /(@import[\\s]+(?!url\\())([^;]*)(;)/g;\n  const STYLESHEET_REGEXP = /(<link[^>]*)(rel=['|\"]?stylesheet['|\"]?[^>]*>)/g;\n\n  // path fixup: style elements in imports must be made relative to the main\n  // document. We fixup url's in url() and @import.\n  const Path = {\n\n    fixUrls(element, base) {\n      if (element.href) {\n        element.setAttribute('href',\n          Path.replaceAttrUrl(element.getAttribute('href'), base));\n      }\n      if (element.src) {\n        element.setAttribute('src',\n          Path.replaceAttrUrl(element.getAttribute('src'), base));\n      }\n      if (element.localName === 'style') {\n        Path.resolveUrlsInStyle(element, base);\n      }\n    },\n\n    fixUrlAttributes(element, base) {\n      const attrs = ['action', 'src', 'href', 'url', 'style'];\n      for (let i = 0, a; i < attrs.length && (a = attrs[i]); i++) {\n        const at = element.attributes[a];\n        const v = at && at.value;\n        // Skip bound attribute values (assume binding is done via {} and []).\n        // TODO(valdrin) consider exposing a library-implementable hook.\n        if (v && (v.search(/({{|\\[\\[)/) < 0)) {\n          at.value = (a === 'style') ?\n            Path.resolveUrlsInCssText(v, base) :\n            Path.replaceAttrUrl(v, base);\n        }\n      }\n    },\n\n    fixUrlsInTemplates(element, base) {\n      const t$ = element.querySelectorAll('template');\n      for (let i = 0; i < t$.length; i++) {\n        Path.fixUrlsInTemplate(t$[i], base);\n      }\n    },\n\n    fixUrlsInTemplate(template, base) {\n      const content = template.content;\n      if (!content) { // Template not supported.\n        return;\n      }\n      const n$ = content.querySelectorAll(\n        'style, form[action], [src], [href], [url], [style]');\n      for (let i = 0; i < n$.length; i++) {\n        const n = n$[i];\n        if (n.localName == 'style') {\n          Path.resolveUrlsInStyle(n, base);\n        } else {\n          Path.fixUrlAttributes(n, base);\n        }\n      }\n      Path.fixUrlsInTemplates(content, base);\n    },\n\n    resolveUrlsInStyle(style, linkUrl) {\n      style.textContent = Path.resolveUrlsInCssText(style.textContent, linkUrl);\n    },\n\n    resolveUrlsInCssText(cssText, linkUrl) {\n      let r = Path.replaceUrls(cssText, linkUrl, CSS_URL_REGEXP);\n      r = Path.replaceUrls(r, linkUrl, CSS_IMPORT_REGEXP);\n      return r;\n    },\n\n    replaceUrls(text, linkUrl, regexp) {\n      return text.replace(regexp, (m, pre, url, post) => {\n        let urlPath = url.replace(/[\"']/g, '');\n        if (linkUrl) {\n          urlPath = Path.resolveUrl(urlPath, linkUrl);\n        }\n        return pre + '\\'' + urlPath + '\\'' + post;\n      });\n    },\n\n    replaceAttrUrl(text, linkUrl) {\n      if (text && ABS_URL_TEST.test(text)) {\n        return text;\n      } else {\n        return Path.resolveUrl(text, linkUrl);\n      }\n    },\n\n    resolveUrl(url, base) {\n      // Lazy feature detection.\n      if (Path.__workingURL === undefined) {\n        Path.__workingURL = false;\n        try {\n          const u = new URL('b', 'http://a');\n          u.pathname = 'c%20d';\n          Path.__workingURL = (u.href === 'http://a/c%20d');\n        } catch (e) {}\n      }\n\n      if (Path.__workingURL) {\n        return (new URL(url, base)).href;\n      }\n\n      // Fallback to creating an anchor into a disconnected document.\n      let doc = Path.__tempDoc;\n      if (!doc) {\n        doc = document.implementation.createHTMLDocument('temp');\n        Path.__tempDoc = doc;\n        doc.__base = doc.createElement('base');\n        doc.head.appendChild(doc.__base);\n        doc.__anchor = doc.createElement('a');\n      }\n      doc.__base.href = base;\n      doc.__anchor.href = url;\n      return doc.__anchor.href || url;\n    }\n  };\n\n  /********************* Xhr processor *********************/\n  const Xhr = {\n\n    async: true,\n\n    /**\n     * @param {!string} url\n     * @return {!Promise}\n     */\n    load(url) {\n      return new Promise((resolve, reject) => {\n        if (!url) {\n          reject({\n            resource: 'error: href must be specified'\n          });\n        } else if (url.match(/^data:/)) {\n          // Handle Data URI Scheme\n          const pieces = url.split(',');\n          const header = pieces[0];\n          let resource = pieces[1];\n          if (header.indexOf(';base64') > -1) {\n            resource = atob(resource);\n          } else {\n            resource = decodeURIComponent(resource);\n          }\n          resolve({\n            resource: resource\n          });\n        } else {\n          const request = new XMLHttpRequest();\n          request.open('GET', url, Xhr.async);\n          request.addEventListener('readystatechange', () => {\n            if (request.readyState === 4) {\n              // Servers redirecting an import can add a Location header to help us\n              // polyfill correctly.\n              let redirectedUrl = undefined;\n              try {\n                const locationHeader = request.getResponseHeader('Location');\n                if (locationHeader) {\n                  // Relative or full path.\n                  redirectedUrl = (locationHeader.substr(0, 1) === '/') ?\n                    location.origin + locationHeader : locationHeader;\n                }\n              } catch (e) {\n                console.error(e.message);\n              }\n              const resp = {\n                resource: (request.response || request.responseText),\n                redirectedUrl: redirectedUrl\n              };\n              if (request.status === 304 || request.status === 0 ||\n                request.status >= 200 && request.status < 300) {\n                resolve(resp);\n              } else {\n                reject(resp);\n              }\n            }\n          });\n          request.send();\n        }\n      });\n    }\n  };\n\n  /********************* importer *********************/\n\n  const isIE = /Trident/.test(navigator.userAgent) ||\n    /Edge\\/\\d./i.test(navigator.userAgent);\n\n  const importSelector = 'link[rel=import]';\n\n  // Used to disable loading of resources.\n  const importDisableType = 'import-disable';\n\n  const disabledLinkSelector = `link[rel=stylesheet][href][type=${importDisableType}]`;\n\n  const importDependenciesSelector = `${importSelector},\nstyle:not([type]), style[type=\"text/css\"], ${disabledLinkSelector},\nlink[rel=stylesheet][href]:not([type]), link[rel=stylesheet][href][type=\"text/css\"],\nscript:not([type]), script[type=\"application/javascript\"],\nscript[type=\"text/javascript\"]`;\n\n  const importDependencyAttr = 'import-dependency';\n\n  const rootImportSelector = `${importSelector}:not(${importDependencyAttr})`;\n\n  const pendingScriptsSelector = `script[${importDependencyAttr}]`;\n\n  const pendingStylesSelector = `style[${importDependencyAttr}],\nlink[rel=stylesheet][${importDependencyAttr}]`;\n\n  /**\n   * Importer will:\n   * - load any linked import documents (with deduping)\n   * - whenever an import is loaded, prompt the parser to try to parse\n   * - observe imported documents for new elements (these are handled via the\n   *   dynamic importer)\n   */\n  class Importer {\n    constructor() {\n      this.documents = {};\n      // Used to keep track of pending loads, so that flattening and firing of\n      // events can be done when all resources are ready.\n      this.inflight = 0;\n      // 1. Load imports contents\n      // 2. Assign them to first import links on the document\n      // 3. Wait for import styles & scripts to be done loading/running\n      // 4. Fire load/error events\n      whenDocumentReady(() => {\n        // Observe changes on <head>.\n        new MutationObserver(m => this.handleMutations(m)).observe(document.head, {\n          childList: true,\n          subtree: true\n        });\n        this.load();\n      });\n    }\n\n    /**\n     * Loads the resources needed by the import link and fires the load/error\n     * event on the node once finished. If link is not defined or null, loads\n     * all imports in the main document.\n     * @param {HTMLLinkElement=} link\n     */\n    load(link) {\n      const whenLoadedPromise = link ? this.whenImportLoaded(link) :\n        this.whenImportsLoaded(document);\n      if (whenLoadedPromise) {\n        this.inflight++;\n        whenLoadedPromise.then(() => {\n          // Wait until all resources are ready.\n          if (--this.inflight === 0) {\n            this.onLoadedAll();\n          }\n        });\n      }\n    }\n\n    /**\n     * @param {!(HTMLDocument|DocumentFragment)} doc\n     * @return {Promise|null}\n     */\n    whenImportsLoaded(doc) {\n      const links = /** @type {!NodeList<!HTMLLinkElement>} */\n        (doc.querySelectorAll(importSelector));\n      const promises = [];\n      for (let i = 0, l = links.length; i < l; i++) {\n        const promise = this.whenImportLoaded(links[i]);\n        if (promise) {\n          promises.push(promise);\n        }\n      }\n      return promises.length ? Promise.all(promises).then(() => doc) : null;\n    }\n\n    /**\n     * @param {!HTMLLinkElement} link\n     * @return {Promise|null}\n     */\n    whenImportLoaded(link) {\n      const url = link.href;\n      // This resource is already being handled by another import.\n      if (this.documents[url] !== undefined) {\n        return null;\n      }\n      // Mark it as pending to notify others this url is being loaded.\n      this.documents[url] = 'pending';\n      return Xhr.load(url)\n        .then(resp => {\n          const doc = this.makeDocument(resp.resource, resp.redirectedUrl || url);\n          this.documents[url] = doc;\n          // Load subtree.\n          return this.whenImportsLoaded(doc);\n        })\n        .catch(() => this.documents[url] = null)\n        .then(() => link);\n    }\n\n    /**\n     * Creates a new document containing resource and normalizes urls accordingly.\n     * @param {string=} resource\n     * @param {string=} url\n     * @return {!DocumentFragment}\n     */\n    makeDocument(resource, url) {\n      if (!resource) {\n        return document.createDocumentFragment();\n      }\n\n      if (isIE) {\n        // <link rel=stylesheet> should be appended to <head>. Not doing so\n        // in IE/Edge breaks the cascading order. We disable the loading by\n        // setting the type before setting innerHTML to avoid loading\n        // resources twice.\n        resource = resource.replace(STYLESHEET_REGEXP, (match, p1, p2) => {\n          if (match.indexOf('type=') === -1) {\n            return `${p1} type=${importDisableType} ${p2}`;\n          }\n          return match;\n        });\n      }\n\n      let content;\n      const template = /** @type {!HTMLTemplateElement} */\n        (document.createElement('template'));\n      template.innerHTML = resource;\n      if (template.content) {\n        // This creates issues in Safari10 when used with shadydom (see #12).\n        content = template.content;\n      } else {\n        // <template> not supported, create fragment and move children into it.\n        content = document.createDocumentFragment();\n        while (template.firstElementChild) {\n          content.appendChild(template.firstElementChild);\n        }\n      }\n\n      // Support <base> in imported docs. Resolve url and remove its href.\n      const baseEl = content.querySelector('base');\n      if (baseEl) {\n        url = Path.replaceAttrUrl(baseEl.getAttribute('href'), url);\n        baseEl.removeAttribute('href');\n      }\n\n      // This is specific to users of <dom-module> (Polymer).\n      // TODO(valdrin) remove this when Polymer uses importForElement.\n      const s$ = content.querySelectorAll('dom-module');\n      for (let i = 0, s; i < s$.length && (s = s$[i]); i++) {\n        s.setAttribute('assetpath',\n          Path.replaceAttrUrl(s.getAttribute('assetpath') || '', url));\n      }\n\n      const n$ = /** @type {!NodeList<!(HTMLLinkElement|HTMLScriptElement|HTMLStyleElement)>} */\n        (content.querySelectorAll(importDependenciesSelector));\n      // For source map hints.\n      let inlineScriptIndex = 0;\n      for (let i = 0, l = n$.length, n; i < l && (n = n$[i]); i++) {\n        // Listen for load/error events, then fix urls.\n        whenElementLoaded(n);\n        Path.fixUrls(n, url);\n        // Mark for easier selectors.\n        n.setAttribute(importDependencyAttr, '');\n        // Generate source map hints for inline scripts.\n        if (n.localName === 'script' && !n.src && n.textContent) {\n          const num = inlineScriptIndex ? `-${inlineScriptIndex}` : '';\n          const content = n.textContent + `\\n//# sourceURL=${url}${num}.js\\n`;\n          // We use the src attribute so it triggers load/error events, and it's\n          // easier to capture errors (e.g. parsing) like this.\n          n.setAttribute('src', 'data:text/javascript;charset=utf-8,' + encodeURIComponent(content));\n          n.textContent = '';\n          inlineScriptIndex++;\n        }\n      }\n      Path.fixUrlsInTemplates(content, url);\n      return content;\n    }\n\n    onLoadedAll() {\n      this.flatten(document);\n      // We wait for styles to load, and at the same time we execute the scripts,\n      // then fire the load/error events for imports to have faster whenReady\n      // callback execution.\n      // NOTE: This is different for native behavior where scripts would be\n      // executed after the styles before them are loaded.\n      // To achieve that, we could select pending styles and scripts in the\n      // document and execute them sequentially in their dom order.\n      Promise.all([this.waitForStyles(), this.runScripts()])\n        .then(() => this.fireEvents());\n    }\n\n    /**\n     * @param {!HTMLDocument} doc\n     */\n    flatten(doc) {\n      const n$ = /** @type {!NodeList<!HTMLLinkElement>} */\n        (doc.querySelectorAll(importSelector));\n      for (let i = 0, l = n$.length, n; i < l && (n = n$[i]); i++) {\n        const imp = this.documents[n.href];\n        n.import = /** @type {!Document} */ (imp);\n        if (imp && imp.nodeType === Node.DOCUMENT_FRAGMENT_NODE) {\n          // We set the .import to be the link itself, and update its readyState.\n          // Other links with the same href will point to this link.\n          this.documents[n.href] = n;\n          n.readyState = 'loading';\n          // Suppress Closure warning about incompatible subtype assignment.\n          ( /** @type {!HTMLElement} */ (n).import = n);\n          this.flatten(imp);\n          n.appendChild(imp);\n        }\n      }\n    }\n\n    /**\n     * Replaces all the imported scripts with a clone in order to execute them.\n     * Updates the `currentScript`.\n     * @return {Promise} Resolved when scripts are loaded.\n     */\n    runScripts() {\n      const s$ = document.querySelectorAll(pendingScriptsSelector);\n      let promise = Promise.resolve();\n      for (let i = 0, l = s$.length, s; i < l && (s = s$[i]); i++) {\n        promise = promise.then(() => {\n          // The pending scripts have been generated through innerHTML and\n          // browsers won't execute them for security reasons. We cannot use\n          // s.cloneNode(true) either, the only way to run the script is manually\n          // creating a new element and copying its attributes.\n          const clone = /** @type {!HTMLScriptElement} */\n            (document.createElement('script'));\n          // Remove import-dependency attribute to avoid double cloning.\n          s.removeAttribute(importDependencyAttr);\n          for (let j = 0, ll = s.attributes.length; j < ll; j++) {\n            clone.setAttribute(s.attributes[j].name, s.attributes[j].value);\n          }\n\n          // Update currentScript and replace original with clone script.\n          currentScript = clone;\n          s.parentNode.replaceChild(clone, s);\n          // Wait for load/error events; after is loaded, reset currentScript.\n          return whenElementLoaded(clone).then(() => currentScript = null);\n        });\n      }\n      return promise;\n    }\n\n    /**\n     * Waits for all the imported stylesheets/styles to be loaded.\n     * @return {Promise}\n     */\n    waitForStyles() {\n      // <link rel=stylesheet> should be appended to <head>. Not doing so\n      // in IE/Edge breaks the cascading order\n      // https://developer.microsoft.com/en-us/microsoft-edge/platform/issues/10472273/\n      // If there is one <link rel=stylesheet> imported, we must move all imported\n      // links and styles to <head>.\n      const needsMove = !!document.querySelector(disabledLinkSelector);\n      const s$ = /** @type {!NodeList<!(HTMLLinkElement|HTMLStyleElement)>} */\n        (document.querySelectorAll(pendingStylesSelector));\n      const promises = [];\n      for (let i = 0, l = s$.length, s; i < l && (s = s$[i]); i++) {\n        // Listen for load/error events, remove selector once is done loading.\n        promises.push(whenElementLoaded(s)\n          .then(() => s.removeAttribute(importDependencyAttr)));\n        // Check if was already moved to head, to handle the case where the element\n        // has already been moved but it is still loading.\n        if (needsMove && s.parentNode !== document.head) {\n          let rootImport = importForElement(s);\n          while (rootImport && importForElement(rootImport)) {\n            rootImport = importForElement(rootImport);\n          }\n          // Replace the element we're about to move with a placeholder.\n          // NOTE: we first have to append the element to the new parent, then\n          // we can put the placeholder at its place, otherwise load/error events\n          // seem to be fired too early.\n          const parent = s.parentNode,\n            next = s.nextSibling,\n            placeholder = document.createElement(s.localName);\n          // Add reference of the moved element.\n          placeholder['__appliedElement'] = s;\n          // Disable this from appearing in document.styleSheets.\n          placeholder.setAttribute('type', 'import-placeholder');\n          // First, re-parent the element...\n          if (rootImport.parentNode === document.head) {\n            document.head.insertBefore(s, rootImport);\n          } else {\n            document.head.appendChild(s);\n          }\n          // ...and then, insert the placeholder at the right place.\n          parent.insertBefore(placeholder, next);\n          // Enable the loading of <link rel=stylesheet>.\n          s.removeAttribute('type');\n        }\n      }\n      return Promise.all(promises);\n    }\n\n    /**\n     * Fires load/error events for imports in the right order .\n     */\n    fireEvents() {\n      const n$ = /** @type {!NodeList<!HTMLLinkElement>} */\n        (document.querySelectorAll(importSelector));\n      // Inverse order to have events firing bottom-up.\n      for (let i = n$.length - 1, n; i >= 0 && (n = n$[i]); i--) {\n        this.fireEventIfNeeded(n);\n      }\n    }\n\n    /**\n     * Fires load/error event for the import if this wasn't done already.\n     * @param {!HTMLLinkElement} link\n     */\n    fireEventIfNeeded(link) {\n      // Don't fire twice same event.\n      if (!link['__loaded']) {\n        link['__loaded'] = true;\n        // Update link's import readyState.\n        link.import && (link.import.readyState = 'complete');\n        const eventType = link.import ? 'load' : 'error';\n        link.dispatchEvent(new CustomEvent(eventType, {\n          bubbles: false,\n          cancelable: false,\n          detail: undefined\n        }));\n      }\n    }\n\n    /**\n     * @param {Array<MutationRecord>} mutations\n     */\n    handleMutations(mutations) {\n      for (let i = 0; i < mutations.length; i++) {\n        const m = mutations[i];\n        if (!m.addedNodes) {\n          continue;\n        }\n        for (let ii = 0; ii < m.addedNodes.length; ii++) {\n          const link = m.addedNodes[ii];\n          if (!link || link.nodeType !== Node.ELEMENT_NODE) {\n            continue;\n          }\n          // NOTE: added scripts are not updating currentScript in IE.\n          // TODO add test w/ script & stylesheet maybe\n          const imports = /** @type {!NodeList<!HTMLLinkElement>} */\n            (isImportLink(link) ? [link] : link.querySelectorAll(importSelector));\n          for (let iii = 0; iii < imports.length; iii++) {\n            const n = imports[iii];\n            const imp = this.documents[n.href];\n            // First time we see this import, load.\n            if (imp === undefined) {\n              this.load(n);\n            }\n            // If nothing else is loading, we can safely associate the import\n            // and fire the load/error event.\n            else if (!this.inflight) {\n              n.import = imp;\n              this.fireEventIfNeeded(n);\n            }\n          }\n        }\n      }\n    }\n  }\n\n  /**\n   * @param {!Node} node\n   * @return {boolean}\n   */\n  const isImportLink = node => {\n    return node.nodeType === Node.ELEMENT_NODE && node.localName === 'link' &&\n      ( /** @type {!HTMLLinkElement} */ (node).rel === 'import');\n  };\n\n  /**\n   * Waits for an element to finish loading. If already done loading, it will\n   * mark the element accordingly.\n   * @param {!(HTMLLinkElement|HTMLScriptElement|HTMLStyleElement)} element\n   * @return {Promise}\n   */\n  const whenElementLoaded = element => {\n    if (!element['__loadPromise']) {\n      element['__loadPromise'] = new Promise(resolve => {\n        // Inline scripts don't trigger load/error events, consider them already loaded.\n        if (element.localName === 'script' && !element.src) {\n          resolve();\n        } else if (isIE && element.localName === 'style') {\n          // NOTE: We listen only for load events in IE/Edge, because in IE/Edge\n          // <style> with @import will fire error events for each failing @import,\n          // and finally will trigger the load event when all @import are\n          // finished (even if all fail).\n          element.addEventListener('load', resolve);\n        } else {\n          element.addEventListener('load', resolve);\n          element.addEventListener('error', resolve);\n        }\n      }).then(() => {\n        element['__loaded'] = true;\n        return element;\n      });\n    }\n    return element['__loadPromise'];\n  }\n\n  /**\n   * Calls the callback when all imports in the document at call time\n   * (or at least document ready) have loaded. Callback is called synchronously\n   * if imports are already done loading.\n   * @param {function()=} callback\n   */\n  const whenReady = callback => {\n    // 1. ensure the document is in a ready state (has dom), then\n    // 2. watch for loading of imports and call callback when done\n    whenDocumentReady(() => whenImportsReady(() => callback && callback()));\n  }\n\n  /**\n   * Invokes the callback when document is in ready state. Callback is called\n   *  synchronously if document is already done loading.\n   * @param {!function()} callback\n   */\n  const whenDocumentReady = callback => {\n    if (document.readyState !== 'loading') {\n      callback();\n    } else {\n      const stateChanged = () => {\n        if (document.readyState !== 'loading') {\n          document.removeEventListener('readystatechange', stateChanged);\n          callback();\n        }\n      }\n      document.addEventListener('readystatechange', stateChanged);\n    }\n  }\n\n  /**\n   * Invokes the callback after all imports are loaded. Callback is called\n   * synchronously if imports are already done loading.\n   * @param {!function()} callback\n   */\n  const whenImportsReady = callback => {\n    let imports = /** @type {!NodeList<!HTMLLinkElement>} */\n      (document.querySelectorAll(rootImportSelector));\n    const promises = [];\n    for (let i = 0, l = imports.length, imp; i < l && (imp = imports[i]); i++) {\n      if (!imp['__loaded']) {\n        promises.push(whenElementLoaded(imp));\n      }\n    }\n    if (promises.length) {\n      Promise.all(promises).then(callback);\n    } else {\n      callback();\n    }\n  }\n\n  /**\n   * Returns the link that imported the element.\n   * @param {!Node} element\n   * @return {HTMLLinkElement|Document|undefined}\n   */\n  const importForElement = element => {\n    if (useNative) {\n      return element.ownerDocument;\n    }\n    let owner = element['__ownerImport'];\n    if (!owner) {\n      owner = element;\n      // Walk up the parent tree until we find an import.\n      while ((owner = owner.parentNode || owner.host) && !isImportLink(owner)) {}\n      element['__ownerImport'] = owner;\n    }\n    return owner;\n  }\n\n  /**\n    Add support for the `HTMLImportsLoaded` event and the `HTMLImports.whenReady`\n    method. This api is necessary because unlike the native implementation,\n    script elements do not force imports to resolve. Instead, users should wrap\n    code in either an `HTMLImportsLoaded` handler or after load time in an\n    `HTMLImports.whenReady(callback)` call.\n\n    NOTE: This module also supports these apis under the native implementation.\n    Therefore, if this file is loaded, the same code can be used under both\n    the polyfill and native implementation.\n   */\n  whenReady(() => document.dispatchEvent(new CustomEvent('HTMLImportsLoaded', {\n    cancelable: true,\n    bubbles: true,\n    detail: undefined\n  })));\n\n  if (useNative) {\n    // Listen for load/error events to capture dynamically added scripts.\n    /**\n     * @type {!function(!Event)}\n     */\n    const onLoadingDone = event => {\n      const elem = /** @type {!Element} */ (event.target);\n      if (isImportLink(elem)) {\n        elem['__loaded'] = true;\n      }\n    };\n    document.addEventListener('load', onLoadingDone, true /* useCapture */ );\n    document.addEventListener('error', onLoadingDone, true /* useCapture */ );\n  } else {\n    new Importer();\n  }\n\n  // exports\n  scope.useNative = useNative;\n  scope.whenReady = whenReady;\n  scope.importForElement = importForElement;\n\n})(window.HTMLImports = (window.HTMLImports || {}));\n"]}